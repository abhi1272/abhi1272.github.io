{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/all-countries/all-countries.component.css","webpack:///./src/app/all-countries/all-countries.component.html","webpack:///./src/app/all-countries/all-countries.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/currency-filter.pipe.ts","webpack:///./src/app/currency-view/currency-view.component.css","webpack:///./src/app/currency-view/currency-view.component.html","webpack:///./src/app/currency-view/currency-view.component.ts","webpack:///./src/app/filter1.pipe.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/language-view/language-view.component.css","webpack:///./src/app/language-view/language-view.component.html","webpack:///./src/app/language-view/language-view.component.ts","webpack:///./src/app/map.service.ts","webpack:///./src/app/select-filter.pipe.ts","webpack:///./src/app/single-country/single-country.component.css","webpack:///./src/app/single-country/single-country.component.html","webpack:///./src/app/single-country/single-country.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".select{\\r\\n    margin: 1.5vh 0 -4vw;\\r\\n    border-radius: 20%;\\r\\n}\\r\\n\\r\\n.filter{\\r\\n    margin-left: 4vw;\\r\\n    margin-bottom: 4vh;\\r\\n}\\r\\n\\r\\n.card{\\r\\n    width: 100%;\\r\\n    margin-left: 2vw;\\r\\n    margin-bottom: 1vh;\\r\\n}\\r\\n\\r\\n.card-img-top{\\r\\n    height: 40vh;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.clickCurrency{\\r\\n    text-decoration: none;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.head{\\r\\n    font-family: sans-serif;\\r\\n    color: grey;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container row\\\">\\n  <div class=\\\"col-sm-1\\\"></div>\\n  <div class=\\\"col-sm-3 select\\\">\\n      <input [(ngModel)]=\\\"temp\\\" type=\\\"text\\\" class=\\\"col-sm-8\\\"  placeholder=\\\"Search Country...\\\">\\n  </div>\\n  <div class=\\\"col-sm-6\\\">\\n      <h3 class=\\\"head\\\">Countries from <strong>{{region1}}</strong> region</h3>\\n  </div>\\n  <div class=\\\"col-sm-2\\\">\\n      <a class=\\\"btn btn-warning\\\" (click)=\\\"goBackToPreviousPage()\\\">Go Back</a>\\n  </div>\\n</div><br>\\n<div class=\\\"row filter\\\">\\n  <div class=\\\"col-sm-6\\\">\\n      <input [(ngModel)]=\\\"filterText1\\\" type=\\\"text\\\" class=\\\"col-sm-8\\\"  placeholder=\\\"Filter by language..\\\">\\n  </div>\\n  <div class=\\\"col-sm-6\\\">\\n      <input [(ngModel)]=\\\"filterText2\\\" type=\\\"text\\\" class=\\\"col-sm-8\\\"  placeholder=\\\"Filter by currency..\\\">\\n  </div>\\n</div>\\n<div class=\\\"container row\\\">\\n  <div class=\\\"card\\\" class=\\\"col-sm-4\\\" *ngFor=\\\"let country of allCountries | \\n        filter1: filterText1 | currencyFilter: filterText2 | selectFilter: temp\\\" style=\\\"width: 18rem;\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"{{country.flag}}\\\" alt=\\\"Card image cap\\\">\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">{{country.name}}</h5>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <strong>Name: </strong> {{country.name}}\\n        </div>\\n        <div class=\\\"col-sm-12\\\" *ngIf=\\\"country.capital !== ''\\\">\\n          <strong>Capital: </strong>{{country.capital}}\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <strong>Subregion: </strong>{{country.subregion}}\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <strong>Timezone: </strong>{{country.timezones[0]}}\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <strong>\\n            Currency: </strong><div *ngFor=\\\"let curr of country.currencies\\\">\\n            <a class=\\\"clickCurrency\\\" *ngIf=\\\"curr.code !== null\\\" [routerLink]=\\\"['/currency',curr.code]\\\">\\n              {{curr.name}}</a>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <strong>\\n              Language: </strong><div *ngFor=\\\"let lang of country.languages\\\">\\n            <a class=\\\"clickCurrency\\\" *ngIf=\\\"lang.iso639_1 !== null\\\" [routerLink]=\\\"['/language',lang.iso639_1]\\\">\\n              {{lang.name}}</a>\\n          </div>\\n        </div>\\n      </div>\\n      <br>\\n      <a [routerLink]=\\\"['/name',country.name]\\\" class=\\\"btn btn-primary\\\">View Detail</a>\\n      <br>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport {MapService} from '../map.service';\n\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-all-countries',\n  templateUrl: './all-countries.component.html',\n  styleUrls: ['./all-countries.component.css'],\n  providers:[Location]\n})\nexport class AllCountriesComponent implements OnInit {\n\n  public allCountries;\n  public region1;\n\n  constructor(public MapService:MapService,public _route:ActivatedRoute,public router:Router,\n  public location:Location) {\n    \n   }\n\n  ngOnInit() {\n    let region = this._route.snapshot.paramMap.get('region').toLowerCase()\n    this.region1 = region.toUpperCase();\n    this.MapService.getAllCountries(region).subscribe(\n\n      data=>{\n        console.log(data);\n        this.allCountries = data;\n      }\n    )\n  }\n\n  public goBackToPreviousPage():any{\n    this.location.back();\n  }\n\n}\n\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n    <ul class=\\\"nav navbar\\\">\\n        <li><a  routerLink=\\\"/home\\\">Home</a></li>\\n       </ul>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n    \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MapService} from './map.service';\nimport {RouterModule,Routes} from '@angular/router';\n\n\nimport { AppComponent } from './app.component';\nimport {HomeComponent} from './home/home.component';\nimport { AllCountriesComponent } from './all-countries/all-countries.component';\nimport { SingleCountryComponent } from './single-country/single-country.component';\nimport { CurrencyViewComponent } from './currency-view/currency-view.component';\nimport { LanguageViewComponent } from './language-view/language-view.component';\nimport { Filter1Pipe } from './filter1.pipe';\nimport { CurrencyFilterPipe } from './currency-filter.pipe';\nimport { SelectFilterPipe } from './select-filter.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AllCountriesComponent,\n    SingleCountryComponent,\n    CurrencyViewComponent,\n    LanguageViewComponent,\n    Filter1Pipe,\n    CurrencyFilterPipe,\n    SelectFilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot([\n      {path:'home',component:HomeComponent},\n      {path:'',redirectTo:'home',pathMatch:'full'},\n      {path:'region/:region',component:AllCountriesComponent},\n      {path:'name/:name',component:SingleCountryComponent},\n      {path:'currency/:currency',component:CurrencyViewComponent},\n      {path:'language/:language',component:LanguageViewComponent}\n    ],{useHash:true}\n  )\n  ],\n  providers: [MapService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'currencyFilter'\n})\nexport class CurrencyFilterPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    \n    if(!args){\n      return value;\n    }\n    else{\n      args = args.toUpperCase()\n    }\n\n    return value.filter((item)=>{\n\n      var regex = new RegExp(args,'gi')\n      return item.currencies[0].name.match(regex)\n\n    })  \n   \n  }\n\n\n}\n","module.exports = \".card{\\r\\n    width: 100%\\r\\n}\\r\\n.card-img-top{\\r\\n    height: 40vh;\\r\\n}\\r\\n.clickCurrency{\\r\\n    text-decoration: none;\\r\\n    color: black;\\r\\n}\\r\\n.head{\\r\\n    font-family: sans-serif;\\r\\n    color: grey;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container row\\\">\\n    <div class=\\\"col-sm-3\\\"></div>\\n    <div class=\\\"col-sm-7\\\">\\n        <h3 class=\\\"head\\\"><strong>\\\"{{currency1}}\\\"</strong>currency code view of Countries</h3>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n        <a class=\\\"btn btn-warning\\\" (click)=\\\"goBackToPreviousPage()\\\">Go Back</a>\\n    </div>\\n  </div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card mb-4\\\" *ngFor=\\\"let country of sameCurrencyCountry\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"{{country.flag}}\\\" alt=\\\"Card image cap\\\">\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">{{country.name}}</h5>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3\\\">\\n          <strong>Name: </strong> {{country.name}}\\n        </div>\\n        <div class=\\\"col-sm-3\\\" *ngIf=\\\"country.capital !== ''\\\">\\n          <strong>Capital: </strong>{{country.capital}}\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <strong>Subregion: </strong>{{country.subregion}}\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <strong>Timezone: </strong>{{country.timezones[0]}}\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\" *ngIf=\\\"country.currencies[0].code !== null\\\">\\n          <strong>\\n            Currency: </strong><div *ngFor=\\\"let curr of country.currencies\\\">\\n            <a class=\\\"clickCurrency\\\" *ngIf=\\\"curr.code !== null\\\" [routerLink]=\\\"['/currency',curr.code]\\\">\\n              {{curr.name}}</a>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-6\\\" *ngIf=\\\"country.languages[0].iso639_1 !== null\\\">\\n          <strong>\\n            Language: </strong><div *ngFor=\\\"let lang of country.languages\\\">\\n            <a class=\\\"clickCurrency\\\" [routerLink]=\\\"['/language',lang.iso639_1]\\\">\\n              {{lang.name}}</a>\\n          </div>\\n        </div>\\n      </div>\\n      <br>\\n      <a [routerLink]=\\\"['/name',country.name]\\\" class=\\\"btn btn-primary\\\">View Detail</a>\\n      <br>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport {MapService} from '../map.service';\n\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-currency-view',\n  templateUrl: './currency-view.component.html',\n  styleUrls: ['./currency-view.component.css'],\n  providers:[Location]\n})\nexport class CurrencyViewComponent implements OnInit {\n\n  public sameCurrencyCountry;\n  public currency1;\n\n  constructor(public _http:ActivatedRoute,public router:Router,public MapService:MapService,\n  public location:Location) { }\n\n  ngOnInit() {\n\n    let currency = this._http.snapshot.paramMap.get('currency')\n    this.currency1 = currency;\n\n    this.MapService.getCurrencyView(currency).subscribe(\n\n      data=>{\n        this.sameCurrencyCountry = data;\n        console.log(data)\n      }\n    )\n\n  }\n\n  public goBackToPreviousPage():any{\n    this.location.back();\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n  name: 'filter1'\n})\nexport class Filter1Pipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    \n    if(!args){\n      return value;\n    }\n    else{\n      args = args.toUpperCase()\n    }\n\n    return value.filter((item)=>{\n\n      var regex = new RegExp(args,'gi')\n      return item.languages[0].name.match(regex)\n\n    })  \n   \n  }\n\n}\n","module.exports = \"/* Container holding the image and the text */\\r\\n.main {\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n}\\r\\n/* Top left text */\\r\\n.top-left {\\r\\n    position: absolute;\\r\\n    top: 35%;\\r\\n    left: 70%;\\r\\n    -webkit-transform: translate(-70%, -30%);\\r\\n            transform: translate(-70%, -30%);\\r\\n}\\r\\n/* Centered text */\\r\\n.centered {\\r\\n    position: absolute;\\r\\n    top: 40%;\\r\\n    left: 50%;\\r\\n    -webkit-transform: translate(-70%, -50%);\\r\\n            transform: translate(-70%, -50%);\\r\\n}\\r\\n/* Centered text */\\r\\n.Africa {\\r\\n    position: absolute;\\r\\n    top: 60%;\\r\\n    left: 55%;\\r\\n    -webkit-transform: translate(-50%, -45%);\\r\\n            transform: translate(-50%, -45%);\\r\\n}\\r\\n.Oceania{\\r\\n    position: absolute;\\r\\n    top: 75%;\\r\\n    left: 70%;\\r\\n    -webkit-transform: translate(-45%, -30%);\\r\\n            transform: translate(-45%, -30%);\\r\\n}\\r\\n.Americas{\\r\\n    position: absolute;\\r\\n    top: 30%;\\r\\n    left: 20%;\\r\\n    -webkit-transform: translate(-80%, -80%);\\r\\n            transform: translate(-80%, -80%);\\r\\n}\\r\\n.Polar{\\r\\n    position: absolute;\\r\\n    top: 90%;\\r\\n    left: 70%;\\r\\n    -webkit-transform: translate(-30%, -30%);\\r\\n            transform: translate(-30%, -30%);\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"main\\\">\\n    <img src=\\\"./assets/map.jpg\\\" alt=\\\"Snow\\\" style=\\\"width:100%;\\\">\\n    <div *ngFor=\\\"let region of regions; let i = index\\\">\\n        <div class=\\\"top-left\\\" *ngIf=\\\"region === 'Asia'\\\" [routerLink]=\\\"['/region',region]\\\">\\n            {{region}}\\n        </div>\\n        <div class=\\\"centered\\\" *ngIf=\\\"region === 'Europe'\\\" [routerLink]=\\\"['/region',region]\\\">\\n            {{region}}\\n        </div>\\n        <div class=\\\"Africa\\\" *ngIf=\\\"region === 'Africa'\\\" [routerLink]=\\\"['/region',region]\\\">\\n            {{region}}\\n        </div>\\n        <div class=\\\"Oceania\\\" *ngIf=\\\"region === 'Oceania'\\\" [routerLink]=\\\"['/region',region]\\\">\\n            {{region}}\\n        </div>\\n        <div class=\\\"Americas\\\" *ngIf=\\\"region === 'Americas'\\\" [routerLink]=\\\"['/region',region]\\\">\\n            {{region}}\\n        </div>\\n        <div class=\\\"Polar\\\" *ngIf=\\\"region === 'Polar'\\\" [routerLink]=\\\"['/region',region]\\\">\\n            {{region}}\\n        </div>\\n    </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport {MapService} from '../map.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  public arr = []\n  public regions;\n\n  constructor(public MapService:MapService) {\n    console.log('home component called')\n   }\n\n  ngOnInit() {\n    document.body.classList.add('bg-img');\n    console.log('ngoinit called')\n    this.getCountryName();\n  }\n\n  public getCountryName():any{\n\n    this.MapService.getCountryData().subscribe(\n\n      data=>{\n        //this.regions = data\n        data.map((item)=>{\n          this.arr.push(item.region);\n        })\n          this.regions = new Set(this.arr)\n          console.log(this.regions);\n      }\n\n    )\n\n  }\n\n}\n","module.exports = \".card{\\r\\n    width: 100%\\r\\n}\\r\\n.card-img-top{\\r\\n    height: 40vh;\\r\\n}\\r\\n.clickCurrency{\\r\\n    text-decoration: none;\\r\\n    color: black;\\r\\n}\\r\\n.head{\\r\\n    font-family: sans-serif;\\r\\n    color: grey;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container row\\\">\\n    <div class=\\\"col-sm-3\\\"></div>\\n    <div class=\\\"col-sm-7\\\">\\n        <h3 class=\\\"head\\\"> <strong>\\\"{{language1}}\\\"</strong> code language view of Countries</h3>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n        <a class=\\\"btn btn-warning\\\" (click)=\\\"goBackToPreviousPage()\\\">Go Back</a>\\n    </div>\\n  </div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"card mb-4\\\" *ngFor=\\\"let country of sameLanguageCountry\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"{{country.flag}}\\\" alt=\\\"Card image cap\\\">\\n    <div class=\\\"card-body\\\">\\n      <h5 class=\\\"card-title\\\">{{country.name}}</h5>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3\\\">\\n          <strong>Name: </strong> {{country.name}}\\n        </div>\\n        <div class=\\\"col-sm-3\\\" *ngIf=\\\"country.capital !== ''\\\">\\n          <strong>Capital: </strong>{{country.capital}}\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <strong>Subregion: </strong>{{country.subregion}}\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <strong>Timezone: </strong>{{country.timezones[0]}}\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\" *ngIf=\\\"country.currencies[0].code !== null\\\">\\n          <strong>\\n            Currency: </strong><div *ngFor=\\\"let curr of country.currencies\\\">\\n            <a class=\\\"clickCurrency\\\" *ngIf=\\\"curr.code !== null\\\" [routerLink]=\\\"['/currency',curr.code]\\\">\\n              {{curr.name}}</a>\\n          </div>\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n          <strong>\\n            Language: </strong><div *ngFor=\\\"let lang of country.languages\\\">\\n            <a class=\\\"clickCurrency\\\" *ngIf=\\\"lang.code !== null\\\" [routerLink]=\\\"['/language',lang.iso639_1]\\\">\\n              {{lang.name}}</a>\\n          </div>\\n        </div>\\n      </div>\\n      <br>\\n      <a [routerLink]=\\\"['/name',country.name]\\\" class=\\\"btn btn-primary\\\">View Detail</a>\\n      <br>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport {MapService} from '../map.service';\n\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-language-view',\n  templateUrl: './language-view.component.html',\n  styleUrls: ['./language-view.component.css'],\n  providers:[Location]\n})\nexport class LanguageViewComponent implements OnInit {\n\n  public sameLanguageCountry;\n  public language1;\n\n  constructor(public _http:ActivatedRoute,public router:Router,public MapService:MapService,\n  public location:Location) { }\n\n  ngOnInit() {\n\n    let language = this._http.snapshot.paramMap.get('language')\n    this.language1 = language;\n\n    this.MapService.getLanguageView(language).subscribe(\n\n      data=>{\n        this.sameLanguageCountry = data;\n        console.log(data)\n      }\n    )\n  }\n\n  public goBackToPreviousPage():any{\n    this.location.back();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http'\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n\n  mapBaseUrl = 'https://restcountries.eu/rest/v2';\n\n  constructor(private _http:HttpClient) { }\n\n  public getCountryData():any{\n    \n    let response = this._http.get(this.mapBaseUrl);\n    return response\n  }\n\n  public getAllCountries(regionName):any{\n\n    let response = this._http.get(this.mapBaseUrl + '/' + 'region'+ '/' + regionName);\n    return response\n  }\n\n  public getSingleCountry(countryName):any{\n\n    let response = this._http.get(this.mapBaseUrl + '/' + 'name'+ '/' + countryName + '?fullText=true');\n    return response\n  }\n\n  public getCurrencyView(currency):any{\n\n    let response = this._http.get(this.mapBaseUrl + '/' + 'currency' + '/' + currency)\n    console.log(response);\n    return response\n  }\n\n  public getLanguageView(language):any{\n    let response = this._http.get(this.mapBaseUrl + '/' + 'lang' + '/' + language)\n    console.log(response);\n    return response\n  }\n\n\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'selectFilter'\n})\nexport class SelectFilterPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    \n    if(!args){\n      return value;\n    }\n    else{\n      args = args.toUpperCase()\n    }\n\n    return value.filter((item)=>{\n\n      var regex = new RegExp(args,'gi')\n      return item.name.match(regex)\n\n    })  \n   \n  }\n\n}\n","module.exports = \".card-img-top{\\r\\n    height: 60vh;\\r\\n}\\r\\n.clickCurrency{\\r\\n    text-decoration: none;\\r\\n    color: black;\\r\\n}\\r\\n.head{\\r\\n    font-family: sans-serif;\\r\\n    color: grey;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container row\\\">\\n    <div class=\\\"col-sm-4\\\"></div>\\n    <div class=\\\"col-sm-6\\\">\\n        <h3 class=\\\"head\\\"><strong>{{countyName1}}</strong> Country view</h3>\\n    </div>\\n    <div class=\\\"col-sm-2\\\">\\n        <a class=\\\"btn btn-warning\\\" (click)=\\\"goBackToPreviousPage()\\\">Go Back</a>\\n    </div>\\n  </div>\\n<div class=\\\"card mb-3\\\" *ngIf=\\\"countryDetails\\\">\\n  <img class=\\\"card-img-top\\\" src=\\\"{{countryDetails[0].flag}}\\\" alt=\\\"Card image cap\\\">\\n  <div class=\\\"card-body\\\">\\n    <h5 class=\\\"card-title\\\">{{countryDetails[0].name}}</h5>\\n    <ul class=\\\"list-group\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Capital: </strong>{{countryDetails[0].capital}}\\n          </li>\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Region: </strong>{{countryDetails[0].region}}\\n          </li>\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Subregion: </strong> {{countryDetails[0].subregion}}\\n          </li>\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Population: </strong> {{countryDetails[0].population}}\\n          </li>\\n        </div>\\n      </div>\\n      <br>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Area: </strong>{{countryDetails[0].area}} KM\\n          </li>\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Alpha2Code: </strong>{{countryDetails[0].alpha2Code}}\\n          </li>\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n            <li class=\\\"list-group-item\\\">\\n              <strong>NumericCode: </strong>{{countryDetails[0].numericCode}}\\n            </li>\\n          </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <strong>NativeName: </strong> {{countryDetails[0].nativeName}}\\n          </li>\\n        </div>\\n      </div>\\n      <br>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <li class=\\\"list-group-item\\\">\\n              <strong>TimeZone: </strong> {{countryDetails[0].timezones}}\\n            </li>\\n          </div>\\n        </div>\\n        <br>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <li class=\\\"list-group-item\\\">\\n                <strong>Currencies: </strong><div *ngFor=\\\"let curr of countryDetails[0].currencies\\\">\\n                  <a class=\\\"clickCurrency\\\" *ngIf=\\\"curr.code !== null\\\" [routerLink]=\\\"['/currency',curr.code]\\\">\\n                    {{curr.name}}</a>\\n                    </div>\\n              </li>\\n            </div>\\n          </div>\\n        <br>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <li class=\\\"list-group-item\\\">\\n            <strong>Borders: </strong>{{countryDetails[0].borders}}\\n          </li>\\n        </div>\\n      </div>\\n      <br>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col\\\">\\n            <li class=\\\"list-group-item\\\">\\n              <strong>Languages: </strong><div *ngFor=\\\"let lang of countryDetails[0].languages\\\">\\n                  <a class=\\\"clickCurrency\\\" [routerLink]=\\\"['/language',lang.iso639_1]\\\">\\n                    {{lang.name}}</a>\\n                </div>\\n            </li>\\n          </div>\\n        </div>\\n    </ul>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { MapService } from '../map.service';\n\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-single-country',\n  templateUrl: './single-country.component.html',\n  styleUrls: ['./single-country.component.css'],\n  providers:[Location]\n})\nexport class SingleCountryComponent implements OnInit {\n\n  public countryDetails;\n  public timezones = [];\n  public countyName1;\n\n  constructor(public _route: ActivatedRoute, public router: Router, public MapService: MapService,\n  public location:Location) { }\n\n  ngOnInit() {\n\n    let countryName = this._route.snapshot.paramMap.get('name');\n    this.countyName1 = countryName;\n\n    this.MapService.getSingleCountry(countryName).subscribe(\n\n      data => {\n        this.countryDetails = data;\n        console.log(this.countryDetails);\n       \n      }\n    )\n  }\n\n  public goBackToPreviousPage():any{\n    this.location.back();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}